# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = lib
DIST_COMMON = $(pkginclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/version.h.in ChangeLog
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/autoconfig.h++
CONFIG_CLEAN_FILES = version.h
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am_libzebra_la_OBJECTS = libzebra_la-network.lo \
	libzebra_la-pid_output.lo libzebra_la-getopt.lo \
	libzebra_la-getopt1.lo libzebra_la-daemon.lo \
	libzebra_la-checksum.lo libzebra_la-vector.lo \
	libzebra_la-linklist.lo libzebra_la-vty.lo \
	libzebra_la-command.lo libzebra_la-sockunion.lo \
	libzebra_la-prefix.lo libzebra_la-thread.lo libzebra_la-if.lo \
	libzebra_la-memory.lo libzebra_la-buffer.lo \
	libzebra_la-table.lo libzebra_la-hash.lo libzebra_la-filter.lo \
	libzebra_la-routemap.lo libzebra_la-distribute.lo \
	libzebra_la-stream.lo libzebra_la-str.lo libzebra_la-log.lo \
	libzebra_la-plist.lo libzebra_la-zclient.lo \
	libzebra_la-sockopt.lo libzebra_la-smux.lo libzebra_la-md5.lo \
	libzebra_la-if_rmap.lo libzebra_la-keychain.lo \
	libzebra_la-privs.lo libzebra_la-sigevent.lo \
	libzebra_la-pqueue.lo libzebra_la-jhash.lo \
	libzebra_la-memtypes.lo libzebra_la-workqueue.lo \
	libzebra_la-corba.lo
libzebra_la_OBJECTS = $(am_libzebra_la_OBJECTS)
libzebra_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libzebra_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libzebra_la_SOURCES)
DIST_SOURCES = $(libzebra_la_SOURCES)
HEADERS = $(pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONFDATE = @CONFDATE@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CURSES = @CURSES@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@ -DSYSCONFDIR=\"$(sysconfdir)/\"
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
G2MPLS_CFLAGS = @G2MPLS_CFLAGS@
G2MPLS_LIBS = @G2MPLS_LIBS@
GAWK = @GAWK@
GMPLS_IDL_CFLAGS = @GMPLS_IDL_CFLAGS@
GMPLS_IDL_LIBS = @GMPLS_IDL_LIBS@
GREP = @GREP@
IF_METHOD = @IF_METHOD@
IF_PROC = @IF_PROC@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
IOCTL_METHOD = @IOCTL_METHOD@
IPFORWARD = @IPFORWARD@
KERNEL_METHOD = @KERNEL_METHOD@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBCAP = @LIBCAP@
LIBOBJS = @LIBOBJS@
LIBPAM = @LIBPAM@
LIBREADLINE = @LIBREADLINE@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIB_IPV6 = @LIB_IPV6@
LIB_REGEX = @LIB_REGEX@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MULTIPATH_NUM = @MULTIPATH_NUM@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OMNIIDL = @OMNIIDL@
OMNIORB_CFLAGS = @OMNIORB_CFLAGS@
OMNIORB_LIBS = @OMNIORB_LIBS@
OSPFAPI = @OSPFAPI@
OSPFD = @OSPFD@
OTHER_METHOD = @OTHER_METHOD@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
RTREAD_METHOD = @RTREAD_METHOD@
RT_METHOD = @RT_METHOD@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SNMP_INCLUDES = @SNMP_INCLUDES@
STRIP = @STRIP@
VERSION = @VERSION@
VTYSH = @VTYSH@
ZEBRA = @ZEBRA@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
enable_group = @enable_group@
enable_user = @enable_user@
enable_vty_group = @enable_vty_group@
exampledir = @exampledir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
quagga_statedir = @quagga_statedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LTLIBRARIES = libzebra.la
libzebra_la_LDFLAGS = -version-info 0:0:0
libzebra_la_CPPFLAGS = -I.. -I$(top_srcdir) -I$(top_srcdir)/lib -I$(top_srcdir)/common @SNMP_INCLUDES@
libzebra_la_CFLAGS = $(G2MPLS_CFLAGS)
libzebra_la_SOURCES = network.c pid_output.c getopt.c getopt1.c \
	daemon.c checksum.c vector.c linklist.c vty.c command.c \
	sockunion.c prefix.c thread.c if.c memory.c buffer.c table.c \
	hash.c filter.c routemap.c distribute.c stream.c str.c log.c \
	plist.c zclient.c sockopt.c smux.c md5.c if_rmap.c keychain.c \
	privs.c sigevent.c pqueue.c jhash.c memtypes.c workqueue.c \
	corba.cxx
BUILT_SOURCES = memtypes.h route_types.h
libzebra_la_DEPENDENCIES = @LIB_REGEX@
libzebra_la_LIBADD = @LIB_REGEX@
libzebra_la_LIBS = $(G2MPLS_LIBS)
pkginclude_HEADERS = \
	buffer.h checksum.h command.h filter.h getopt.h hash.h \
	if.h linklist.h log.h \
	memory.h network.h prefix.h routemap.h distribute.h sockunion.h \
	str.h stream.h table.h thread.h vector.h version.h vty.h zebra.h \
	plist.h zclient.h sockopt.h smux.h md5.h if_rmap.h keychain.h \
	privs.h sigevent.h pqueue.h jhash.h zassert.h memtypes.h \
	workqueue.h route_types.h \
	corba.h

EXTRA_DIST = regex.c regex-gnu.h memtypes.awk route_types.awk route_types.txt
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cxx .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu lib/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu lib/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
version.h: $(top_builddir)/config.status $(srcdir)/version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libzebra.la: $(libzebra_la_OBJECTS) $(libzebra_la_DEPENDENCIES) 
	$(libzebra_la_LINK) -rpath $(libdir) $(libzebra_la_OBJECTS) $(libzebra_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-buffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-checksum.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-command.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-corba.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-daemon.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-distribute.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-filter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-getopt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-getopt1.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-hash.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-if.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-if_rmap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-jhash.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-keychain.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-linklist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-log.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-md5.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-memory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-memtypes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-network.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-pid_output.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-plist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-pqueue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-prefix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-privs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-routemap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-sigevent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-smux.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-sockopt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-sockunion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-str.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-stream.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-table.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-thread.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-vector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-vty.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-workqueue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libzebra_la-zclient.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

libzebra_la-network.lo: network.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-network.lo -MD -MP -MF $(DEPDIR)/libzebra_la-network.Tpo -c -o libzebra_la-network.lo `test -f 'network.c' || echo '$(srcdir)/'`network.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-network.Tpo $(DEPDIR)/libzebra_la-network.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='network.c' object='libzebra_la-network.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-network.lo `test -f 'network.c' || echo '$(srcdir)/'`network.c

libzebra_la-pid_output.lo: pid_output.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-pid_output.lo -MD -MP -MF $(DEPDIR)/libzebra_la-pid_output.Tpo -c -o libzebra_la-pid_output.lo `test -f 'pid_output.c' || echo '$(srcdir)/'`pid_output.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-pid_output.Tpo $(DEPDIR)/libzebra_la-pid_output.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pid_output.c' object='libzebra_la-pid_output.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-pid_output.lo `test -f 'pid_output.c' || echo '$(srcdir)/'`pid_output.c

libzebra_la-getopt.lo: getopt.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-getopt.lo -MD -MP -MF $(DEPDIR)/libzebra_la-getopt.Tpo -c -o libzebra_la-getopt.lo `test -f 'getopt.c' || echo '$(srcdir)/'`getopt.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-getopt.Tpo $(DEPDIR)/libzebra_la-getopt.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='getopt.c' object='libzebra_la-getopt.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-getopt.lo `test -f 'getopt.c' || echo '$(srcdir)/'`getopt.c

libzebra_la-getopt1.lo: getopt1.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-getopt1.lo -MD -MP -MF $(DEPDIR)/libzebra_la-getopt1.Tpo -c -o libzebra_la-getopt1.lo `test -f 'getopt1.c' || echo '$(srcdir)/'`getopt1.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-getopt1.Tpo $(DEPDIR)/libzebra_la-getopt1.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='getopt1.c' object='libzebra_la-getopt1.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-getopt1.lo `test -f 'getopt1.c' || echo '$(srcdir)/'`getopt1.c

libzebra_la-daemon.lo: daemon.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-daemon.lo -MD -MP -MF $(DEPDIR)/libzebra_la-daemon.Tpo -c -o libzebra_la-daemon.lo `test -f 'daemon.c' || echo '$(srcdir)/'`daemon.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-daemon.Tpo $(DEPDIR)/libzebra_la-daemon.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='daemon.c' object='libzebra_la-daemon.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-daemon.lo `test -f 'daemon.c' || echo '$(srcdir)/'`daemon.c

libzebra_la-checksum.lo: checksum.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-checksum.lo -MD -MP -MF $(DEPDIR)/libzebra_la-checksum.Tpo -c -o libzebra_la-checksum.lo `test -f 'checksum.c' || echo '$(srcdir)/'`checksum.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-checksum.Tpo $(DEPDIR)/libzebra_la-checksum.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='checksum.c' object='libzebra_la-checksum.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-checksum.lo `test -f 'checksum.c' || echo '$(srcdir)/'`checksum.c

libzebra_la-vector.lo: vector.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-vector.lo -MD -MP -MF $(DEPDIR)/libzebra_la-vector.Tpo -c -o libzebra_la-vector.lo `test -f 'vector.c' || echo '$(srcdir)/'`vector.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-vector.Tpo $(DEPDIR)/libzebra_la-vector.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='vector.c' object='libzebra_la-vector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-vector.lo `test -f 'vector.c' || echo '$(srcdir)/'`vector.c

libzebra_la-linklist.lo: linklist.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-linklist.lo -MD -MP -MF $(DEPDIR)/libzebra_la-linklist.Tpo -c -o libzebra_la-linklist.lo `test -f 'linklist.c' || echo '$(srcdir)/'`linklist.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-linklist.Tpo $(DEPDIR)/libzebra_la-linklist.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='linklist.c' object='libzebra_la-linklist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-linklist.lo `test -f 'linklist.c' || echo '$(srcdir)/'`linklist.c

libzebra_la-vty.lo: vty.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-vty.lo -MD -MP -MF $(DEPDIR)/libzebra_la-vty.Tpo -c -o libzebra_la-vty.lo `test -f 'vty.c' || echo '$(srcdir)/'`vty.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-vty.Tpo $(DEPDIR)/libzebra_la-vty.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='vty.c' object='libzebra_la-vty.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-vty.lo `test -f 'vty.c' || echo '$(srcdir)/'`vty.c

libzebra_la-command.lo: command.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-command.lo -MD -MP -MF $(DEPDIR)/libzebra_la-command.Tpo -c -o libzebra_la-command.lo `test -f 'command.c' || echo '$(srcdir)/'`command.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-command.Tpo $(DEPDIR)/libzebra_la-command.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='command.c' object='libzebra_la-command.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-command.lo `test -f 'command.c' || echo '$(srcdir)/'`command.c

libzebra_la-sockunion.lo: sockunion.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-sockunion.lo -MD -MP -MF $(DEPDIR)/libzebra_la-sockunion.Tpo -c -o libzebra_la-sockunion.lo `test -f 'sockunion.c' || echo '$(srcdir)/'`sockunion.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-sockunion.Tpo $(DEPDIR)/libzebra_la-sockunion.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sockunion.c' object='libzebra_la-sockunion.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-sockunion.lo `test -f 'sockunion.c' || echo '$(srcdir)/'`sockunion.c

libzebra_la-prefix.lo: prefix.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-prefix.lo -MD -MP -MF $(DEPDIR)/libzebra_la-prefix.Tpo -c -o libzebra_la-prefix.lo `test -f 'prefix.c' || echo '$(srcdir)/'`prefix.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-prefix.Tpo $(DEPDIR)/libzebra_la-prefix.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='prefix.c' object='libzebra_la-prefix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-prefix.lo `test -f 'prefix.c' || echo '$(srcdir)/'`prefix.c

libzebra_la-thread.lo: thread.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-thread.lo -MD -MP -MF $(DEPDIR)/libzebra_la-thread.Tpo -c -o libzebra_la-thread.lo `test -f 'thread.c' || echo '$(srcdir)/'`thread.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-thread.Tpo $(DEPDIR)/libzebra_la-thread.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='thread.c' object='libzebra_la-thread.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-thread.lo `test -f 'thread.c' || echo '$(srcdir)/'`thread.c

libzebra_la-if.lo: if.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-if.lo -MD -MP -MF $(DEPDIR)/libzebra_la-if.Tpo -c -o libzebra_la-if.lo `test -f 'if.c' || echo '$(srcdir)/'`if.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-if.Tpo $(DEPDIR)/libzebra_la-if.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='if.c' object='libzebra_la-if.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-if.lo `test -f 'if.c' || echo '$(srcdir)/'`if.c

libzebra_la-memory.lo: memory.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-memory.lo -MD -MP -MF $(DEPDIR)/libzebra_la-memory.Tpo -c -o libzebra_la-memory.lo `test -f 'memory.c' || echo '$(srcdir)/'`memory.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-memory.Tpo $(DEPDIR)/libzebra_la-memory.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memory.c' object='libzebra_la-memory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-memory.lo `test -f 'memory.c' || echo '$(srcdir)/'`memory.c

libzebra_la-buffer.lo: buffer.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-buffer.lo -MD -MP -MF $(DEPDIR)/libzebra_la-buffer.Tpo -c -o libzebra_la-buffer.lo `test -f 'buffer.c' || echo '$(srcdir)/'`buffer.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-buffer.Tpo $(DEPDIR)/libzebra_la-buffer.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='buffer.c' object='libzebra_la-buffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-buffer.lo `test -f 'buffer.c' || echo '$(srcdir)/'`buffer.c

libzebra_la-table.lo: table.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-table.lo -MD -MP -MF $(DEPDIR)/libzebra_la-table.Tpo -c -o libzebra_la-table.lo `test -f 'table.c' || echo '$(srcdir)/'`table.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-table.Tpo $(DEPDIR)/libzebra_la-table.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='table.c' object='libzebra_la-table.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-table.lo `test -f 'table.c' || echo '$(srcdir)/'`table.c

libzebra_la-hash.lo: hash.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-hash.lo -MD -MP -MF $(DEPDIR)/libzebra_la-hash.Tpo -c -o libzebra_la-hash.lo `test -f 'hash.c' || echo '$(srcdir)/'`hash.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-hash.Tpo $(DEPDIR)/libzebra_la-hash.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='hash.c' object='libzebra_la-hash.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-hash.lo `test -f 'hash.c' || echo '$(srcdir)/'`hash.c

libzebra_la-filter.lo: filter.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-filter.lo -MD -MP -MF $(DEPDIR)/libzebra_la-filter.Tpo -c -o libzebra_la-filter.lo `test -f 'filter.c' || echo '$(srcdir)/'`filter.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-filter.Tpo $(DEPDIR)/libzebra_la-filter.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='filter.c' object='libzebra_la-filter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-filter.lo `test -f 'filter.c' || echo '$(srcdir)/'`filter.c

libzebra_la-routemap.lo: routemap.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-routemap.lo -MD -MP -MF $(DEPDIR)/libzebra_la-routemap.Tpo -c -o libzebra_la-routemap.lo `test -f 'routemap.c' || echo '$(srcdir)/'`routemap.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-routemap.Tpo $(DEPDIR)/libzebra_la-routemap.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='routemap.c' object='libzebra_la-routemap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-routemap.lo `test -f 'routemap.c' || echo '$(srcdir)/'`routemap.c

libzebra_la-distribute.lo: distribute.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-distribute.lo -MD -MP -MF $(DEPDIR)/libzebra_la-distribute.Tpo -c -o libzebra_la-distribute.lo `test -f 'distribute.c' || echo '$(srcdir)/'`distribute.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-distribute.Tpo $(DEPDIR)/libzebra_la-distribute.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='distribute.c' object='libzebra_la-distribute.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-distribute.lo `test -f 'distribute.c' || echo '$(srcdir)/'`distribute.c

libzebra_la-stream.lo: stream.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-stream.lo -MD -MP -MF $(DEPDIR)/libzebra_la-stream.Tpo -c -o libzebra_la-stream.lo `test -f 'stream.c' || echo '$(srcdir)/'`stream.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-stream.Tpo $(DEPDIR)/libzebra_la-stream.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='stream.c' object='libzebra_la-stream.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-stream.lo `test -f 'stream.c' || echo '$(srcdir)/'`stream.c

libzebra_la-str.lo: str.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-str.lo -MD -MP -MF $(DEPDIR)/libzebra_la-str.Tpo -c -o libzebra_la-str.lo `test -f 'str.c' || echo '$(srcdir)/'`str.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-str.Tpo $(DEPDIR)/libzebra_la-str.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='str.c' object='libzebra_la-str.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-str.lo `test -f 'str.c' || echo '$(srcdir)/'`str.c

libzebra_la-log.lo: log.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-log.lo -MD -MP -MF $(DEPDIR)/libzebra_la-log.Tpo -c -o libzebra_la-log.lo `test -f 'log.c' || echo '$(srcdir)/'`log.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-log.Tpo $(DEPDIR)/libzebra_la-log.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='log.c' object='libzebra_la-log.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-log.lo `test -f 'log.c' || echo '$(srcdir)/'`log.c

libzebra_la-plist.lo: plist.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-plist.lo -MD -MP -MF $(DEPDIR)/libzebra_la-plist.Tpo -c -o libzebra_la-plist.lo `test -f 'plist.c' || echo '$(srcdir)/'`plist.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-plist.Tpo $(DEPDIR)/libzebra_la-plist.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='plist.c' object='libzebra_la-plist.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-plist.lo `test -f 'plist.c' || echo '$(srcdir)/'`plist.c

libzebra_la-zclient.lo: zclient.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-zclient.lo -MD -MP -MF $(DEPDIR)/libzebra_la-zclient.Tpo -c -o libzebra_la-zclient.lo `test -f 'zclient.c' || echo '$(srcdir)/'`zclient.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-zclient.Tpo $(DEPDIR)/libzebra_la-zclient.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='zclient.c' object='libzebra_la-zclient.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-zclient.lo `test -f 'zclient.c' || echo '$(srcdir)/'`zclient.c

libzebra_la-sockopt.lo: sockopt.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-sockopt.lo -MD -MP -MF $(DEPDIR)/libzebra_la-sockopt.Tpo -c -o libzebra_la-sockopt.lo `test -f 'sockopt.c' || echo '$(srcdir)/'`sockopt.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-sockopt.Tpo $(DEPDIR)/libzebra_la-sockopt.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sockopt.c' object='libzebra_la-sockopt.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-sockopt.lo `test -f 'sockopt.c' || echo '$(srcdir)/'`sockopt.c

libzebra_la-smux.lo: smux.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-smux.lo -MD -MP -MF $(DEPDIR)/libzebra_la-smux.Tpo -c -o libzebra_la-smux.lo `test -f 'smux.c' || echo '$(srcdir)/'`smux.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-smux.Tpo $(DEPDIR)/libzebra_la-smux.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='smux.c' object='libzebra_la-smux.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-smux.lo `test -f 'smux.c' || echo '$(srcdir)/'`smux.c

libzebra_la-md5.lo: md5.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-md5.lo -MD -MP -MF $(DEPDIR)/libzebra_la-md5.Tpo -c -o libzebra_la-md5.lo `test -f 'md5.c' || echo '$(srcdir)/'`md5.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-md5.Tpo $(DEPDIR)/libzebra_la-md5.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='md5.c' object='libzebra_la-md5.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-md5.lo `test -f 'md5.c' || echo '$(srcdir)/'`md5.c

libzebra_la-if_rmap.lo: if_rmap.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-if_rmap.lo -MD -MP -MF $(DEPDIR)/libzebra_la-if_rmap.Tpo -c -o libzebra_la-if_rmap.lo `test -f 'if_rmap.c' || echo '$(srcdir)/'`if_rmap.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-if_rmap.Tpo $(DEPDIR)/libzebra_la-if_rmap.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='if_rmap.c' object='libzebra_la-if_rmap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-if_rmap.lo `test -f 'if_rmap.c' || echo '$(srcdir)/'`if_rmap.c

libzebra_la-keychain.lo: keychain.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-keychain.lo -MD -MP -MF $(DEPDIR)/libzebra_la-keychain.Tpo -c -o libzebra_la-keychain.lo `test -f 'keychain.c' || echo '$(srcdir)/'`keychain.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-keychain.Tpo $(DEPDIR)/libzebra_la-keychain.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='keychain.c' object='libzebra_la-keychain.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-keychain.lo `test -f 'keychain.c' || echo '$(srcdir)/'`keychain.c

libzebra_la-privs.lo: privs.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-privs.lo -MD -MP -MF $(DEPDIR)/libzebra_la-privs.Tpo -c -o libzebra_la-privs.lo `test -f 'privs.c' || echo '$(srcdir)/'`privs.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-privs.Tpo $(DEPDIR)/libzebra_la-privs.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='privs.c' object='libzebra_la-privs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-privs.lo `test -f 'privs.c' || echo '$(srcdir)/'`privs.c

libzebra_la-sigevent.lo: sigevent.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-sigevent.lo -MD -MP -MF $(DEPDIR)/libzebra_la-sigevent.Tpo -c -o libzebra_la-sigevent.lo `test -f 'sigevent.c' || echo '$(srcdir)/'`sigevent.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-sigevent.Tpo $(DEPDIR)/libzebra_la-sigevent.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='sigevent.c' object='libzebra_la-sigevent.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-sigevent.lo `test -f 'sigevent.c' || echo '$(srcdir)/'`sigevent.c

libzebra_la-pqueue.lo: pqueue.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-pqueue.lo -MD -MP -MF $(DEPDIR)/libzebra_la-pqueue.Tpo -c -o libzebra_la-pqueue.lo `test -f 'pqueue.c' || echo '$(srcdir)/'`pqueue.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-pqueue.Tpo $(DEPDIR)/libzebra_la-pqueue.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='pqueue.c' object='libzebra_la-pqueue.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-pqueue.lo `test -f 'pqueue.c' || echo '$(srcdir)/'`pqueue.c

libzebra_la-jhash.lo: jhash.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-jhash.lo -MD -MP -MF $(DEPDIR)/libzebra_la-jhash.Tpo -c -o libzebra_la-jhash.lo `test -f 'jhash.c' || echo '$(srcdir)/'`jhash.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-jhash.Tpo $(DEPDIR)/libzebra_la-jhash.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='jhash.c' object='libzebra_la-jhash.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-jhash.lo `test -f 'jhash.c' || echo '$(srcdir)/'`jhash.c

libzebra_la-memtypes.lo: memtypes.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-memtypes.lo -MD -MP -MF $(DEPDIR)/libzebra_la-memtypes.Tpo -c -o libzebra_la-memtypes.lo `test -f 'memtypes.c' || echo '$(srcdir)/'`memtypes.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-memtypes.Tpo $(DEPDIR)/libzebra_la-memtypes.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='memtypes.c' object='libzebra_la-memtypes.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-memtypes.lo `test -f 'memtypes.c' || echo '$(srcdir)/'`memtypes.c

libzebra_la-workqueue.lo: workqueue.c
@am__fastdepCC_TRUE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -MT libzebra_la-workqueue.lo -MD -MP -MF $(DEPDIR)/libzebra_la-workqueue.Tpo -c -o libzebra_la-workqueue.lo `test -f 'workqueue.c' || echo '$(srcdir)/'`workqueue.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-workqueue.Tpo $(DEPDIR)/libzebra_la-workqueue.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='workqueue.c' object='libzebra_la-workqueue.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(libzebra_la_CFLAGS) $(CFLAGS) -c -o libzebra_la-workqueue.lo `test -f 'workqueue.c' || echo '$(srcdir)/'`workqueue.c

.cxx.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libzebra_la-corba.lo: corba.cxx
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libzebra_la-corba.lo -MD -MP -MF $(DEPDIR)/libzebra_la-corba.Tpo -c -o libzebra_la-corba.lo `test -f 'corba.cxx' || echo '$(srcdir)/'`corba.cxx
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/libzebra_la-corba.Tpo $(DEPDIR)/libzebra_la-corba.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='corba.cxx' object='libzebra_la-corba.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libzebra_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libzebra_la-corba.lo `test -f 'corba.cxx' || echo '$(srcdir)/'`corba.cxx

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgincludedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS


memtypes.h: $(srcdir)/memtypes.c $(srcdir)/memtypes.awk
	($(GAWK) -f $(srcdir)/memtypes.awk $(srcdir)/memtypes.c > $@)

route_types.h: $(srcdir)/route_types.txt $(srcdir)/route_types.awk
	($(GAWK) -f $(srcdir)/route_types.awk $(srcdir)/route_types.txt > $@)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
